<?php

namespace Zhineng\Bubble\MiniProgram;

use Zhineng\Bubble\Ability;
use Zhineng\Bubble\Http\Response;

class AuthAbility extends Ability
{
    public function code2Session(string $code, string $grant = 'authorization_code')
    {
        return $this->app->newRequest()->get('/sns/jscode2session', [
            'appid' => $this->app->appId(),
            'secret' => $this->app->appSecret(),
            'js_code' => $code,
            'grant_type' => $grant,
        ]);
    }

    public function session(string $code, string $grant = 'authorization_code')
    {
        return $this->code2Session($code, $grant);
    }

    /**
     * Retrieve access token for calling backend APIs.
     *
     * @return Response
     * @link https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html
     */
    public function getAccessToken(string $grant = 'client_credential')
    {
        return $this->app->newRequest()->get('/cgi-bin/token', [
            'grant_type' => $grant,
            'appid' => $this->app->appId(),
            'secret' => $this->app->appSecret(),
        ]);
    }

    public function accessToken(string $grant = 'client_credential')
    {
        return $this->getAccessToken($grant);
    }

    public function token(string $grant = 'client_credential')
    {
        return $this->getAccessToken($grant);
    }

    /**
     * Check whether the encrypted hash is generated by WeChat.
     *
     * @param  string  $hash
     * @return Response
     * @link https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/user-info/auth.checkEncryptedData.html
     */
    public function checkEncryptedData(string $hash)
    {
        return $this->app->newRequest()->post('/wxa/business/checkencryptedmsg?access_token='.$this->app->token(), [
            'encrypted_msg_hash' => $hash,
        ]);
    }

    /**
     * @param  string  $openId
     * @param  string|null  $transactionId
     * @param  string|null  $merchantId
     * @param  string|null  $orderNumber
     * @return Response
     * @link https://developers.weixin.qq.com/miniprogram/en/dev/api-backend/open-api/user-info/auth.getPaidUnionId.html
     */
    public function getPaidUnionId(
        string $openId,
        string $transactionId = null,
        string $merchantId = null, string $orderNumber = null
    ) {
        return $this->app->newRequest()->get('/wxa/getpaidunionid', array_filter([
            'access_token' => $this->app->token(),
            'openid' => $openId,
            'transaction_id' => $transactionId,
            'mch_id' => $merchantId,
            'out_trade_no' => $orderNumber,
        ]));
    }

    /**
     * @param  string  $openId
     * @param  string  $transactionId
     * @return Response
     * @link https://developers.weixin.qq.com/miniprogram/en/dev/api-backend/open-api/user-info/auth.getPaidUnionId.html
     */
    public function getPaidUnionIdByTransaction(string $openId, string $transactionId)
    {
        return $this->getPaidUnionId($openId, transactionId: $transactionId);
    }

    /**
     * @param  string  $openId
     * @param  string  $merchantId
     * @param  string  $orderNumber
     * @return Response
     * @link https://developers.weixin.qq.com/miniprogram/en/dev/api-backend/open-api/user-info/auth.getPaidUnionId.html
     */
    public function getPaidUnionIdByMerchant(string $openId, string $merchantId, string $orderNumber)
    {
        return $this->getPaidUnionId($openId, merchantId: $merchantId, orderNumber: $orderNumber);
    }

    /**
     * Retrieve open pid for user in plugin mode.
     *
     * @param  string  $code
     * @return Response
     * @link https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/user-info/auth.getPluginOpenPId.html
     */
    public function getPluginOpenPId(string $code)
    {
        return $this->app->newRequest()->post('/wxa/getpluginopenpid?access_token='.$this->app->token(), compact('code'));
    }

    public function getPid(string $code)
    {
        return $this->getPluginOpenPId($code);
    }
}
